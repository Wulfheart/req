# This is a basic workflow to help you get started with Actions

name: Dev build

# Controls when the workflow will run
on:
  workflow_dispatch:

  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-windows:
    name: Build on ${{ matrix.platform }} for ${{ matrix.GOOS }}-${{matrix.GOARCH}}
    strategy:
            matrix:
                platform: [windows-latest]
                GOOS: [windows]
                GOARCH: [amd64]
    runs-on: ${{matrix.platform}}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.3' # The Go version to download (if necessary) and use.
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-toolchain
          
          
      - name: Add MSYS2 to PATH
        run: echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
        shell: bash
        
      # Runs a set of commands using the runners shell
      - name: Build
        run: GOARCH=${{matrix.GOARCH}} GOOS=${{matrix.GOOS}} go build -o req-${{matrix.GOOS}}-${{matrix.GOARCH}}  
        shell: bash
        
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: req-${{matrix.GOOS}}-${{matrix.GOARCH}}.exe
          path: ./req-${{matrix.GOOS}}-${{matrix.GOARCH}}
          
  build-macos:
    name: Build on ${{ matrix.platform }} for ${{ matrix.GOOS }}-${{matrix.GOARCH}}
    strategy:
            matrix:
                platform: [macos-latest]
                GOOS: [darwin]
                GOARCH: [amd64]
    runs-on: ${{matrix.platform}}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.3' # The Go version to download (if necessary) and use.
        
      # Runs a set of commands using the runners shell
      - name: Build
        run: GOARCH=${{matrix.GOARCH}} GOOS=${{matrix.GOOS}} go build -o req-${{matrix.GOOS}}-${{matrix.GOARCH}}  
        shell: bash
        
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: req-${{matrix.GOOS}}-${{matrix.GOARCH}}
          path: ./req-${{matrix.GOOS}}-${{matrix.GOARCH}}
          
  build-linux:
    name: Build on ${{ matrix.platform }} for ${{ matrix.GOOS }}-${{matrix.GOARCH}}
    strategy:
            matrix:
                platform: [ubuntu-20.04]
                GOOS: [linux]
                GOARCH: [amd64]
    runs-on: ${{matrix.platform}}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.3' # The Go version to download (if necessary) and use.

      # Runs a set of commands using the runners shell
      - name: Build
        run: GOARCH=${{matrix.GOARCH}} GOOS=${{matrix.GOOS}} go build -o req-${{matrix.GOOS}}-${{matrix.GOARCH}}  
        shell: bash

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: req-${{matrix.GOOS}}-${{matrix.GOARCH}}
          path: ./req-${{matrix.GOOS}}-${{matrix.GOARCH}}

